/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    behaviors {
        mt_twk: mt_twk {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_TWK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        lt_h: lt_h {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_H";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp RIGHT         &kp Q  &kp W     &kp E      &kp R                &kp T          &kp Y              &kp U                &kp I        &kp O               &kp P     &kp LEFT_BRACKET
  &mt LCTRL ESCAPE  &kp A  &kp S     &kp D      &kp F                &kp G          &kp H              &kp J                &kp K        &kp L               &kp SEMI  &mt RCTRL SQT
  &kp LALT          &kp Z  &kp X     &kp C      &kp V                &kp B          &kp N              &kp M                &kp COMMA    &kp DOT             &kp FSLH  &mt RALT DOUBLE_QUOTES
                           &kp LGUI  &lt 2 TAB  &mt_twk LSHFT SPACE  &lt_h 1 RET    &lt_h 1 BACKSPACE  &mt_twk RSHFT SPACE  &lt 2 GRAVE  &mt RGUI LG(SPACE)
            >;
        };

        lower_layer {
            bindings = <
  &kp PIPE             &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3    &kp NUMBER_4      &kp N5                  &kp NUMBER_6           &kp N7             &kp N8           &kp N9                &kp N0                 &kp BACKSLASH
  &mt LCTRL MINUS      &kp EXCL      &kp AT         &kp HASH        &kp DLLR          &kp PRCNT               &kp CARET              &kp AMPS           &kp STAR         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &mt RCTRL EQUAL
  &mt LALT UNDERSCORE  &kp ASTERISK  &kp LESS_THAN  &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp GREATER_THAN      &kp SLASH              &mt RIGHT_ALT PLUS
                                     &trans         &trans          &trans            &trans                  &kp LA(BACKSPACE)      &trans             &trans           &trans
            >;
        };

        raise_layer {
            bindings = <
  &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_PLAY_PAUSE  &kp C_VOL_DN    &kp C_VOL_UP  &kp C_MUTE  &kp C_BRIGHTNESS_INC  &kp PRINTSCREEN
  &mt LCTRL F1  &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp LEFT_ARROW    &kp DOWN_ARROW  &kp UP        &kp RIGHT   &kp C_BRIGHTNESS_DEC  &mt RCTRL K_APP
  &mt LALT F7   &kp F8        &kp F9        &kp F10       &kp F11       &kp F12         &kp HOME          &kp PAGE_DOWN   &kp PG_UP     &kp END     &kp INS               &mt RALT DELETE
                              &trans        &trans        &trans        &to 3           &trans            &trans          &trans        &trans
            >;
        };

        gaming {
            bindings = <
  &kp CAPSLOCK  &kp Q  &kp W     &kp E    &kp R      &kp T          &kp Y          &kp U      &kp I      &kp O          &kp P     &kp LEFT_BRACKET
  &kp LCTRL     &kp A  &kp S     &kp D    &kp F      &kp G          &kp H          &kp J      &kp K      &kp L          &kp SEMI  &kp RCTRL
  &kp LSHFT     &kp Z  &kp X     &kp C    &kp V      &kp B          &kp N          &kp M      &kp COMMA  &kp DOT        &kp FSLH  &kp RIGHT_SHIFT
                       &kp LALT  &kp TAB  &kp SPACE  &lt_h 4 RET    &kp BACKSPACE  &kp SPACE  &none      &kp RIGHT_ALT
            >;
        };

        lower_gaming {
            bindings = <
  &kp ESCAPE  &kp M   &kp I   &kp F5  &kp F6  &to 0     &trans  &trans  &trans  &trans  &trans  &trans
  &trans      &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &trans      &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                      &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
